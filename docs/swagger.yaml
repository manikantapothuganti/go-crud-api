definitions:
  database.Book:
    type: object
info:
  contact:
    email: manidpothuganti@gmail.com
    name: Mani
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /book:
    post:
      consumes:
      - application/json
      description: Create a book
      parameters:
      - description: Book to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/database.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Book'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Create a book
      tags:
      - Books
  /book/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Book'
        "404":
          description: Book not found
          schema:
            type: string
      summary: Retrieve a book by ID
      tags:
      - Books
    put:
      consumes:
      - application/json
      description: Update a book by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/database.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Book'
        "400":
          description: Bad request
          schema:
            type: string
      summary: Update a book by ID
      tags:
      - Books
  /books:
    get:
      consumes:
      - application/json
      description: Retrieve all books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Book'
            type: array
        "404":
          description: Authors not found
          schema:
            type: string
      summary: Retrieve all books
      tags:
      - Books
    post:
      consumes:
      - application/json
      description: Create multiple books
      parameters:
      - description: Books to create
        in: body
        name: books
        required: true
        schema:
          items:
            $ref: '#/definitions/database.Book'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Book'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
      summary: Create multiple books
      tags:
      - Books
securityDefinitions:
  No Auth:
    type: basic
swagger: "2.0"
